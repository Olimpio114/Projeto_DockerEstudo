# Criado por https://www.toptal.com/developers/gitignore/api/python,django,visualstudiocode,pycharm+all,sublimetext,intellij+all,netbeans,venv,dotenv,angular,reactnative,vue,vuejs
# Edite em https://www.toptal.com/developers/gitignore?templates=python,django,visualstudiocode,pycharm+all,sublimetext,intellij+all,netbeans,venv,dotenv,angular,reactnative,vue,vuejs

### Angular ###
## Angular ##
# saída compilada
# Virtual environment
env/
dist/
tmp/
aplicativo/**/*.js
aplicativo/**/*.js.map

# dependências
módulos_de_nó/
componentes_do_arqueiro/

# IDEs e editores
.ideia/

# diversos
.sass-cache/
conectar.bloqueio/
cobertura/
libpeerconnection.log/
npm-debug.log
testem.log
digitações/
.angular/

# e2e
e2e/*.js
e2e/*.mapa

# Arquivos do sistema
.DS_Store/

### Django ###
*.registro
*.pote
*.pyc
__pycache__/
configurações_locais.py
db.sqlite3
db.sqlite3-diário
mídia

# Se o seu processo de construção inclui a execução de collectstatic, então você provavelmente não precisa ou deseja incluir staticfiles/
# no seu repositório Git. Atualize e descomente a linha a seguir conforme necessário.
# <nome-do-projeto-django>/arquivos-estáticos/

### Pilha Django.Python ###
# Arquivos DLL compilados/otimizados em bytes
*.py[bacalhau]
*$py.class

# Extensões C
*.então

# Distribuição / embalagem
.Python
construir/
desenvolver-ovos/
downloads/
ovos/
.ovos/
biblioteca/
lib64/
partes/
sdist/
var/
rodas/
compartilhar/rodas-python/
*.egg-info/
.instalado.cfg
*.ovo
MANIFESTO

# Instalador Py
# Normalmente esses arquivos são escritos por um script python a partir de um modelo
# antes que o PyInstaller crie o exe, para injetar data/outras informações nele.
*.manifesto
*.espec

# Registros do instalador
pip-log.txt
pip-delete-este-diretório.txt

# Testes unitários / relatórios de cobertura
htmlcov/
.tox/
.nox/
.cobertura
.cobertura.*
.cache
nosetests.xml
cobertura.xml
*.cobrir
*.py,capa
.hipótese/
.pytest_cache/
cobrir/

# Traduções
*.mo

# Coisas do Django:

# Coisas de frasco:
exemplo/
.webassets-cache

# Coisas estranhas:
.rascunho

# Documentação do Sphinx
docs/_build/

# Construtor Py
.pybuilder/
alvo/

# Caderno Jupyter
.ipynb_pontos de verificação

#IPython
perfil_padrão/
ipython_config.py

# pyenv
# Para uma biblioteca ou pacote, você pode querer ignorar esses arquivos, pois o código é
# destinado a ser executado em vários ambientes; caso contrário, faça o check-in:
# .python-versão

# pipenv
# De acordo com pypa/pipenv#598, é recomendado incluir Pipfile.lock no controle de versão.
# No entanto, em caso de colaboração, se houver dependências específicas da plataforma ou dependências
# não tendo suporte multiplataforma, o pipenv pode instalar dependências que não funcionam, ou não
# instale todas as dependências necessárias.
#Pipfile.lock

# poesia
# Semelhante ao Pipfile.lock, geralmente é recomendado incluir poetry.lock no controle de versão.
# Isto é especialmente recomendado para pacotes binários para garantir a reprodutibilidade e é mais
# comumente ignorado para bibliotecas.
# https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poesia.lock

# pdm
# Semelhante ao Pipfile.lock, geralmente é recomendado incluir pdm.lock no controle de versão.
#pdm.lock
# pdm armazena configurações de todo o projeto em .pdm.toml, mas é recomendado não incluí-lo
# no controle de versão.
# https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; usado por exemplo, github.com/David-OConnor/pyflow e github.com/pdm-project/pdm
__pypacotes__/

# Coisas de aipo
agendamento do celerybeat
celerybeat.pid

# Arquivos analisados ​​pelo SageMath
*.sage.py

# Ambientes
.env
.venv
ambiente/
venv/
Ambiente/
env.bak/
venv.bak/

# Configurações do projeto Spyder
.projeto spyder
.projeto espião

# Configurações do projeto de corda
.projeto de corda

# documentação do mkdocs
/site

# meupy
.mypy_cache/
.dmypy.json
dmypy.json

# Verificador de tipo de pira
.pira/

# analisador de tipo estático pytype
.pytype/

# Símbolos de depuração do Cython
cython_debug/

# PyCharm
# O modelo específico do JetBrains é mantido em um JetBrains.gitignore separado que pode
# pode ser encontrado em https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
# e pode ser adicionado ao gitignore global ou mesclado neste arquivo. Para um ambiente mais nuclear
# opção (não recomendada) você pode descomentar o seguinte para ignorar toda a pasta de ideias.
#.ideia/

### dotenv ###

### Intellij+tudo ###
# Abrange IDEs da JetBrains: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio, WebStorm e Rider
# Referência: https://intellij-support.jetbrains.com/hc/en-us/articles/206544839

# Coisas específicas do usuário
.ideia/**/espaço de trabalho.xml
.ideia/**/tarefas.xml
.idea/**/usage.statistics.xml
.idea/**/dicionários
.ideia/**/prateleira

# Específico do usuário da AWS
.ideia/**/aws.xml

# Arquivos gerados
.ideia/**/contentModel.xml

# Arquivos sensíveis ou de alta rotatividade
.ideia/**/fontes de dados/
.ideia/**/dataSources.ids
.idea/**/dataSources.local.xml
.ideia/**/sqlDataSources.xml
.ideia/**/dinâmico.xml
.ideia/**/uiDesigner.xml
.ideia/**/dbnavigator.xml

# Gradle
.ideia/**/gradle.xml
.idea/**/bibliotecas

# Gradle e Maven com importação automática
# Ao usar Gradle ou Maven com importação automática, você deve excluir arquivos de módulo,
# pois serão recriados e podem causar rotatividade. Descomente se estiver usando
# importação automática.
# .ideia/artefatos
# .idea/compilador.xml
# .idea/jarRepositories.xml
# .idea/módulos.xml
# .ideia/*.iml
# .ideia/módulos
# *.iml
# *.ipr

# CMake
cmake-build-*/

# Plug-in Mongo Explorer
.idea/**/mongoSettings.xml

# Formato de projeto baseado em arquivo
*.iws

# IntelliJ
fora/

# plugin mpeltonen/sbt-idea
.idea_modules/

# Plug-in JIRA
atlassian-ide-plugin.xml

# Plugin Clojure cursivo
.idea/replstate.xml

# Plug-in SonarLint
.ideia/sonarlint/

# Plugin Crashlytics (para Android Studio e IntelliJ)
com_crashlytics_export_strings.xml
crashlytics.propriedades
crashlytics-build.propriedades
fabric.propriedades

# Cliente REST baseado em editor
.ideia/httpRequests

# Arquivo de cache serializado do Android Studio 3.1+
.idea/caches/build_file_checksums.ser

### Patch Intellij+all ###
# Ignore tudo, exceto as configurações de estilo de código e as configurações de execução
# que devem ser compartilhados dentro das equipes.

.ideia/*

!.ideia/estilos de código
!.idea/runConfigurations

### NetBeans ###
**/nbproject/privado/
**/nbproject/Makefile-*.mk
**/nbproject/Pacote-*.bash
nbbuild/
nbdist/
.nb-gradle/

### PyCharm+tudo ###
# Abrange IDEs da JetBrains: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio, WebStorm e Rider
# Referência: https://intellij-support.jetbrains.com/hc/en-us/articles/206544839

# Coisas específicas do usuário

# Específico do usuário da AWS

# Arquivos gerados

# Arquivos sensíveis ou de alta rotatividade

# Gradle

# Gradle e Maven com importação automática
# Ao usar Gradle ou Maven com importação automática, você deve excluir arquivos de módulo,
# pois serão recriados e podem causar rotatividade. Descomente se estiver usando
# importação automática.
# .ideia/artefatos
# .idea/compilador.xml
# .idea/jarRepositories.xml
# .idea/módulos.xml
# .ideia/*.iml
# .ideia/módulos
# *.iml
# *.ipr

# CMake

# Plug-in Mongo Explorer

# Formato de projeto baseado em arquivo

# IntelliJ

# plugin mpeltonen/sbt-idea

# Plug-in JIRA

# Plugin Clojure cursivo

# Plug-in SonarLint

# Plugin Crashlytics (para Android Studio e IntelliJ)

# Cliente REST baseado em editor

# Arquivo de cache serializado do Android Studio 3.1+

### PyCharm+todos os patches ###
# Ignore tudo, exceto as configurações de estilo de código e as configurações de execução
# que devem ser compartilhados dentro das equipes.



### Python ###
# Arquivos DLL compilados/otimizados em bytes

# Extensões C

# Distribuição / embalagem

# Instalador Py
# Normalmente esses arquivos são escritos por um script python a partir de um modelo
# antes que o PyInstaller crie o exe, para injetar data/outras informações nele.

# Registros do instalador

# Testes unitários / relatórios de cobertura

# Traduções

# Coisas do Django:

# Coisas de frasco:

# Coisas estranhas:

# Documentação do Sphinx

# Construtor Py

# Caderno Jupyter

#IPython

# pyenv
# Para uma biblioteca ou pacote, você pode querer ignorar esses arquivos, pois o código é
# destinado a ser executado em vários ambientes; caso contrário, faça o check-in:
# .python-versão

# pipenv
# De acordo com pypa/pipenv#598, é recomendado incluir Pipfile.lock no controle de versão.
# No entanto, em caso de colaboração, se houver dependências específicas da plataforma ou dependências
# não tendo suporte multiplataforma, o pipenv pode instalar dependências que não funcionam, ou não
# instale todas as dependências necessárias.

# poesia
# Semelhante ao Pipfile.lock, geralmente é recomendado incluir poetry.lock no controle de versão.
# Isto é especialmente recomendado para pacotes binários para garantir a reprodutibilidade e é mais
# comumente ignorado para bibliotecas.
# https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control

# pdm
# Semelhante ao Pipfile.lock, geralmente é recomendado incluir pdm.lock no controle de versão.
# pdm armazena configurações de todo o projeto em .pdm.toml, mas é recomendado não incluí-lo
# no controle de versão.
# https://pdm.fming.dev/#use-with-ide

# PEP 582; usado por exemplo, github.com/David-OConnor/pyflow e github.com/pdm-project/pdm

# Coisas de aipo

# Arquivos analisados ​​pelo SageMath

# Ambientes

# Configurações do projeto Spyder

# Configurações do projeto de corda

# documentação do mkdocs

# meupy

# Verificador de tipo de pira

# analisador de tipo estático pytype

# Símbolos de depuração do Cython

# PyCharm
# O modelo específico do JetBrains é mantido em um JetBrains.gitignore separado que pode
# pode ser encontrado em https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
# e pode ser adicionado ao gitignore global ou mesclado neste arquivo. Para um ambiente mais nuclear
# opção (não recomendada) você pode descomentar o seguinte para ignorar toda a pasta de ideias.

### Patch do Python ###
# Arquivo de configuração local do Poetry - https://python-poetry.org/docs/configuration/#local-configuration
poesia.toml

# ruff
.ruff_cache/

# Arquivos de configuração LSP
pyrightconfig.json

### ReactNative ###
# Base de pilha do React Native

.exposição
__gerado__

### Pilha ReactNative.macOS ###
# Em geral
.DS_Store
.AppleDuplo
.LSOverride

# O ícone deve terminar com dois \r
Ícone


# Miniaturas
._*

# Arquivos que podem aparecer na raiz de um volume
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.Itens Temporários
.Lixos
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

# Diretórios potencialmente criados no compartilhamento AFP remoto
.AppleDB
.AppleDesktop
Pasta de Lixeira da Rede
Itens temporários
.apdisk

### Pilha ReactNative.Android ###
# Arquivos Gradle
.gradle/

# Arquivo de configuração local (caminho do SDK, etc.)
propriedades locais

# Arquivos de Log/SO

# Arquivos e pastas gerados pelo Android Studio
capturas/
.externalNativeBuild/
.cxx/
*.apk
saída.json

# IntelliJ
*.iml
misc.xml
deploymentTargetDropDown.xml
render.experimental.xml

# Arquivos de keystore
*.jks
*.keystore

# Serviços Google (por exemplo, APIs ou Firebase)
google-services.json

# Criação de perfil do Android
*.hprof

### Pilha ReactNative.Gradle ###
.gradle
**/construir/
!src/**/construir/

# Ignorar configuração da GUI do Gradle
gradle-app.configuração

# Evite ignorar o arquivo jar do wrapper do Gradle (arquivos .jar geralmente são ignorados)
!gradle-wrapper.jar

# Evite ignorar propriedades do wrapper Gradle
!gradle-wrapper.propriedades

# Cache do projeto
.gradletasknamecache

# Arquivos gerados pelo plugin Eclipse Gradle
# Núcleo Eclipse
.projeto
# Específico para JDT (Ferramentas de desenvolvimento Java Eclipse)
.caminho de classe

### Pilha ReactNative.Xcode ###
## Configurações do usuário
xcuserdata/

## Xcode 8 e anteriores
*.xcscmblueprint
*.xccheckout

### Pilha ReactNative.Linux ###
*~

# arquivos temporários que podem ser criados se um processo ainda tiver um identificador aberto de um arquivo excluído
.fuse_oculto*

# Preferências do diretório KDE
.diretório

# Pasta de lixo do Linux que pode aparecer em qualquer partição ou disco
.Lixo-*

# Os arquivos .nfs são criados quando um arquivo aberto é removido, mas ainda está sendo acessado
.nfs*

### Pilha ReactNative.Node ###
# Registros
toras
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*
.pnpm-debug.log*

# Relatórios de diagnóstico (https://nodejs.org/api/report.html)
relatório.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json

# Dados de tempo de execução
pids
*.pid
*.semente
*.pid.lock

# Diretório para bibliotecas instrumentadas geradas por jscoverage/JSCover
lib-cov

# Diretório de cobertura usado por ferramentas como istambul
cobertura
*.lcov

# cobertura de teste de Nova York
.nyc_output

# Armazenamento intermediário Grunt (https://gruntjs.com/creating-plugins#storing-task-files)
.grunhido

# Diretório de dependências do Bower (https://bower.io/)
componentes do bower

# configuração node-waf
.lock-wscript

# Complementos binários compilados (https://nodejs.org/api/addons.html)
construir/lançar

# Diretórios de dependência
pacotes jspm/

# Diretório de dependências do Snowpack (https://snowpack.dev/)
módulos_web/

# Cache TypeScript
*.tsbuildinfo

# Diretório de cache npm opcional
.npm

# Cache eslint opcional
.eslintcache

# Cache stylelint opcional
.stylelintcache

# Cache de micropacote
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Histórico REPL opcional
.histórico_de_replicação_de_nó

# Saída de 'npm pack'
*.tgz

# Arquivo de integridade do Yarn
.integridade-do-fio

# arquivos de variáveis ​​de ambiente dotenv
.env.desenvolvimento.local
.env.teste.local
.env.produção.local
.env.local

# cache do pacote-bundler (https://parceljs.org/)
.parcel-cache

# Saída da compilação Next.js
.próximo
fora

# Nuxt.js constrói / gera saída
.nuxt
distância

# Arquivos Gatsby
.cache/
# Comente na linha pública se o seu projeto usa Gatsby e não Next.js
# https://nextjs.org/blog/next-9-1#public-directory-support
# público

# saída da compilação vuepress
.vuepress/dist

# diretório temporário e de cache do vuepress v2.x
.temp

# Cache do Docusaurus e arquivos gerados
.docusaurus

# Diretórios sem servidor
.sem servidor/

# Cache do FuseBox
.caixa de fusíveis/

# Arquivos locais do DynamoDB
.dynamodb/

# Arquivo de porta TernJS
.tern-port

# Armazena versões do VSCode usadas para testar extensões do VSCode
.vscode-teste

# fio v2
.fio/cache
.yarn/desconectado
.yarn/estado-de-construção.yml
.yarn/install-state.gz
.pnp.*

### Pilha ReactNative.Buck ###
sair correndo/
.buckconfig.local
.buckd/
.versão buck
.versão falsa do Buck

### SublimeTexto ###
# Arquivos de cache para Sublime Text
*.tmlanguage.cache
*.tmPreferences.cache
*.stTheme.cache

# Os arquivos do espaço de trabalho são específicos do usuário
*.sublime-espaço de trabalho

# Os arquivos do projeto devem ser verificados no repositório, a menos que haja um problema significativo
# proporção de colaboradores provavelmente não usará o Sublime Text
# *.sublime-projeto

# Arquivo de configuração SFTP
sftp-config.json
sftp-config-alt*.json

# Arquivos específicos de controle de pacotes
Controle de pacote.última execução
Pacote Control.ca-list
Pacote Control.ca-bundle
Pacote Control.system-ca-bundle
Pacote Control.cache/
Controle de Pacotes.ca-certs/
Controle de Pacotes.merged-ca-bundle
Controle de pacote.user-ca-bundle
oscrypto-ca-bundle.crt
bh_unicode_properties.cache

# O pacote Sublime-github armazena um token do github neste arquivo
# https://packagecontrol.io/packages/sublime-github
GitHub.sublime-settings

### venv ###
# Virtualenv
# http://iamzed.com/2009/05/07/a-primer-on-virtualenv/
[Bb]em
[Ii]ncluir
[Ll]ib
[Ll]ib64
[Ll]ocal
[Ss]criptos
pyvenv.cfg
pip-selfcheck.json

### Código do VisualStudio ###
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensões.json
!.vscode/*.trechos de código

# Histórico local para o Visual Studio Code
.história/

# Extensões do Visual Studio Code criadas
*.vsix

### Patch do VisualStudioCode ###
# Ignorar todo o histórico local de arquivos
.história
.ionídeo

### Vista ###
# modelo gitignore para projetos Vue.js
#
# Modelo recomendado: Node.gitignore

# TODO: de onde vem essa regra?
docs/_livro

# TODO: de onde vem essa regra?
teste/

### Vuejs ###
# Modelo recomendado: Node.gitignore

yarn-error.log

# Fim de https://www.toptal.com/developers/gitignore/api/python,django,visualstudiocode,pycharm+all,sublimetext,intellij+all,netbeans,venv,dotenv,angular,reactnative,vue,vuejs